{
    "collab_server" : "",
    "contents" : "foo_action <- function(x){\n  v <- x\n  v[is.na(x)] <- 0\n  v <- 1*(v > 0)\n  return(v)\n}\n\nconstruct_qlearning_ready_data <- function(){\n  \n  # keep nb rows\n  n <- nrow(tmp_)\n  \n  # learning dataset (tm was for transition matrix, but surely a better name would be suited)\n  tm <- data.frame(\n    'daytime_0' = tmp_$daytime_disc[-n],\n    'daytime_1' = tmp_$daytime_disc[-1],\n    'glucose_0' = tmp_$value_blood_glucose_measurement_[-n],\n    'glucose_1' = tmp_$value_blood_glucose_measurement_[-1]\n  )\n  tm$action_nph_0 <- foo_action(tmp_$value_nph_insulin_dose_[-n])\n  tm$action_reg_0 <- foo_action(tmp_$value_regular_insulin_dose_[-n])\n  tm$action_ult_0 <- foo_action(tmp_$value_ultralente_insulin_dose_[-n])\n  tm$action_0 <- apply(cbind(tm[,c('action_nph_0', 'action_reg_0', 'action_ult_0')]), 1, paste0, collapse = \"\")\n  tm$action_0 <- factor(x = tm$action_0)\n  ### tm$action_P <- tm$action_0[]\n  is_ok <- (tmp_$id[-1] == tmp_$id[-n])\n  tm <- tm[is_ok,]\n  tm <- na.omit(tm)\n  return(tm)\n  \n}\n",
    "created" : 1549182428390.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1290814336",
    "id" : "DD17E2D",
    "lastKnownWriteTime" : 1548892068,
    "last_content_update" : 1548892068,
    "path" : "~/Documents/kdd_2019_diabetes/kdd_diabetes/construct_qlearning_ready_data.R",
    "project_path" : "construct_qlearning_ready_data.R",
    "properties" : {
    },
    "relative_order" : 12,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}